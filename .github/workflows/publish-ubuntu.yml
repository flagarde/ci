---
name: Ubuntu

on:
  push:
    branches: [main]
    paths:
    - Ubuntu/**
    - .github/workflows/publish-ubuntu.yml
  pull_request:
    paths:
    - Ubuntu/**
    - .github/workflows/publish-ubuntu.yml
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  gcc:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        version: [4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5, 6, 7, 8, 9, 10, 11, 12]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.1.1
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}-ubuntu-gcc-${{ matrix.version }}-x86_64

    - name: Build and push Docker image
      uses: docker/build-push-action@v3.2.0
      with:
        context: ./Ubuntu
        build-args: |
          compiler=gcc-${{ matrix.version }}
        push: ${{ github.event_name != 'pull_request' }}
        file: ./Ubuntu/Dockerfile
        tags: v1, latest
        labels: ${{ steps.meta.outputs.labels }}

  clang:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        version: [3.5, 3.6, 3.7, 3.8, 3.9, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.1.1
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}-ubuntu-clang-${{ matrix.version }}-x86_64

    - name: Build and push Docker image
      uses: docker/build-push-action@v3.2.0
      with:
        context: ./Ubuntu
        build-args: |
          compiler=clang-${{ matrix.version }}
        push: ${{ github.event_name != 'pull_request' }}
        file: ./Ubuntu/Dockerfile
        tags: v1, latest
        labels: ${{ steps.meta.outputs.labels }}
